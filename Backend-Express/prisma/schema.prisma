datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  salt       String
  boards     Board[]     @relation("BoardOwner")       // Tableros que este usuario posee
  boardUsers BoardUser[]                                // Relación con tableros compartidos
  settings   UserSettings?                             // Configuraciones del usuario
}

model UserSettings {
  id                    Int     @id @default(autoincrement())
  userId                Int     @unique
  refetchInterval       Int     @default(10)            // Intervalo para refrescar (en segundos o ms según implementación)
  descripcionMayusculas Boolean @default(false)         // Opción de mostrar descripción en mayúsculas
  theme                 String  @default("light")       // Tema visual: light/dark u otro
  user                  User    @relation(fields: [userId], references: [id])
}

model Board {
  id         Int         @id @default(autoincrement())
  name       String
  ownerId    Int
  owner      User        @relation("BoardOwner", fields: [ownerId], references: [id])
  tasks      Task[]                                // Tareas que pertenecen a este tablero
  boardUsers BoardUser[]                           // Usuarios con permisos en este tablero
}

model Task {
  id         Int      @id @default(autoincrement())
  title      String
  content    String?
  completada Boolean  @default(false)             // Estado de completada o no
  boardId    Int
  board      Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)  // Relación con tablero, borrado en cascada
}

model BoardUser {
  id       Int    @id @default(autoincrement())
  boardId  Int
  userId   Int
  role     Role
  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)


  @@unique([boardId, userId])
}


enum Role {
  propietario
  editor
  lectura
}
